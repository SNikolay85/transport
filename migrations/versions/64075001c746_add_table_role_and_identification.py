"""add table Role and Identification

Revision ID: 64075001c746
Revises: a74d5557b9bd
Create Date: 2024-10-30 12:58:13.780072

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "64075001c746"
down_revision: Union[str, None] = "a74d5557b9bd"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "role",
        sa.Column("id_role", sa.Integer(), nullable=False),
        sa.Column("name_role", sa.String(length=50), nullable=False),
        sa.Column(
            "created_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id_role"),
        sa.UniqueConstraint("name_role"),
    )
    op.create_table(
        "identification",
        sa.Column("id_identification", sa.Integer(), nullable=False),
        sa.Column("id_people", sa.Integer(), nullable=False),
        sa.Column("id_tg", sa.String(length=50), nullable=True),
        sa.Column("login", sa.String(length=50), nullable=True),
        sa.Column("password", sa.String(length=50), nullable=True),
        sa.Column("id_role", sa.Integer(), nullable=False),
        sa.Column(
            "created_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["id_people"], ["people.id_people"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["id_role"], ["role.id_role"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id_identification"),
        sa.UniqueConstraint(
            "id_people",
            "id_tg",
            "login",
            "password",
            "id_role",
            name="identification_uc",
        ),
        sa.UniqueConstraint("id_tg"),
        sa.UniqueConstraint("login"),
        sa.UniqueConstraint("password"),
    )
    op.alter_column(
        "refueling",
        "quantity",
        existing_type=sa.REAL(),
        type_=sa.Float(precision=2, asdecimal=2, decimal_return_scale=2),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "refueling",
        "quantity",
        existing_type=sa.Float(
            precision=2, asdecimal=2, decimal_return_scale=2
        ),
        type_=sa.REAL(),
        existing_nullable=False,
    )
    op.drop_table("identification")
    op.drop_table("role")
    # ### end Alembic commands ###
