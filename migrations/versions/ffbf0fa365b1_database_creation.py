"""Database creation

Revision ID: ffbf0fa365b1
Revises: 
Create Date: 2024-09-05 11:49:11.235357

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "ffbf0fa365b1"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "fuel",
        sa.Column("id_fuel", sa.Integer(), nullable=False),
        sa.Column("name_fuel", sa.String(length=100), nullable=False),
        sa.Column(
            "created_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id_fuel"),
        sa.UniqueConstraint("name_fuel"),
    )
    op.create_table(
        "point",
        sa.Column("id_point", sa.Integer(), nullable=False),
        sa.Column("name_point", sa.String(length=100), nullable=False),
        sa.Column("cost", sa.Integer(), nullable=False),
        sa.Column(
            "created_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id_point"),
        sa.UniqueConstraint("name_point"),
    )
    op.create_table(
        "position",
        sa.Column("id_position", sa.Integer(), nullable=False),
        sa.Column("name_position", sa.String(length=100), nullable=False),
        sa.Column(
            "created_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id_position"),
        sa.UniqueConstraint("name_position"),
    )
    op.create_table(
        "where_drive",
        sa.Column("id_wd", sa.Integer(), nullable=False),
        sa.Column("name_wd", sa.String(length=100), nullable=False),
        sa.Column(
            "created_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id_wd"),
        sa.UniqueConstraint("name_wd"),
    )
    op.create_table(
        "people",
        sa.Column("id_people", sa.Integer(), nullable=False),
        sa.Column("first_name", sa.String(length=50), nullable=False),
        sa.Column("last_name", sa.String(length=50), nullable=False),
        sa.Column("patronymic", sa.String(length=50), nullable=False),
        sa.Column("id_point", sa.Integer(), nullable=False),
        sa.Column("id_position", sa.Integer(), nullable=False),
        sa.Column("driving_licence", sa.String(length=50), nullable=True),
        sa.Column(
            "created_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["id_point"], ["point.id_point"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["id_position"], ["position.id_position"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id_people"),
        sa.UniqueConstraint("driving_licence"),
        sa.UniqueConstraint(
            "first_name",
            "last_name",
            "patronymic",
            "id_point",
            "id_position",
            name="people_uc",
        ),
    )
    op.create_table(
        "route",
        sa.Column("id_route", sa.Integer(), nullable=False),
        sa.Column("id_start_point", sa.Integer(), nullable=False),
        sa.Column("id_finish_point", sa.Integer(), nullable=False),
        sa.Column("distance", sa.Integer(), nullable=False),
        sa.Column(
            "created_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["id_finish_point"], ["point.id_point"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["id_start_point"], ["point.id_point"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id_route"),
        sa.UniqueConstraint(
            "id_start_point", "id_finish_point", name="start_finish_uc"
        ),
    )
    op.create_table(
        "car",
        sa.Column("id_car", sa.Integer(), nullable=False),
        sa.Column("name_car", sa.String(length=100), nullable=False),
        sa.Column("number_of_car", sa.String(length=20), nullable=False),
        sa.Column("average_consumption", sa.Integer(), nullable=False),
        sa.Column("id_people", sa.Integer(), nullable=False),
        sa.Column(
            "created_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["id_people"], ["people.id_people"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id_car"),
        sa.UniqueConstraint("number_of_car"),
    )
    op.create_table(
        "driver",
        sa.Column("id_driver", sa.Integer(), nullable=False),
        sa.Column("id_people", sa.Integer(), nullable=False),
        sa.Column("date_trip", sa.Date(), nullable=False),
        sa.Column(
            "created_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["id_people"], ["people.id_people"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id_driver"),
        sa.UniqueConstraint("id_people", "date_trip", name="people_date_uc"),
    )
    op.create_table(
        "refueling",
        sa.Column("id_refueling", sa.Integer(), nullable=False),
        sa.Column("id_fuel", sa.Integer(), nullable=False),
        sa.Column("id_people", sa.Integer(), nullable=False),
        sa.Column("quantity", sa.Float(precision=2), nullable=False),
        sa.Column("date_refueling", sa.Date(), nullable=False),
        sa.Column(
            "created_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["id_fuel"], ["fuel.id_fuel"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["id_people"], ["people.id_people"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id_refueling"),
    )
    op.create_table(
        "car_fuel",
        sa.Column("id_car_fuel", sa.Integer(), nullable=False),
        sa.Column("id_car", sa.Integer(), nullable=False),
        sa.Column("id_fuel", sa.Integer(), nullable=False),
        sa.Column(
            "created_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["id_car"], ["car.id_car"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["id_fuel"], ["fuel.id_fuel"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id_car_fuel"),
        sa.UniqueConstraint("id_car", "id_fuel", name="car_fuel_uc"),
    )
    op.create_table(
        "passenger",
        sa.Column("id_passenger", sa.Integer(), nullable=False),
        sa.Column("order", sa.Integer(), nullable=False),
        sa.Column("id_people", sa.Integer(), nullable=False),
        sa.Column("id_driver", sa.Integer(), nullable=False),
        sa.Column("where_drive", sa.Integer(), nullable=False),
        sa.Column(
            "created_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_on",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["id_driver"], ["driver.id_driver"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["id_people"], ["people.id_people"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["where_drive"], ["where_drive.id_wd"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id_passenger"),
        sa.UniqueConstraint(
            "id_people", "id_driver", "where_drive", name="passenger_uc"
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("passenger")
    op.drop_table("car_fuel")
    op.drop_table("refueling")
    op.drop_table("driver")
    op.drop_table("car")
    op.drop_table("route")
    op.drop_table("people")
    op.drop_table("where_drive")
    op.drop_table("position")
    op.drop_table("point")
    op.drop_table("fuel")
    # ### end Alembic commands ###
